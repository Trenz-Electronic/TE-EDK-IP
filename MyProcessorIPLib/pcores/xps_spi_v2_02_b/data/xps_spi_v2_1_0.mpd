#-- DISCLAIMER OF LIABILITY
#--
#-- This file contains proprietary and confidential information of
#-- Xilinx, Inc. ("Xilinx"), that is distributed under a license
#-- from Xilinx, and may be used, copied and/or disclosed only
#-- pursuant to the terms of a valid license agreement with Xilinx.
#--
#-- XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
#-- ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
#-- EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
#-- LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
#-- MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
#-- does not warrant that functions included in the Materials will
#-- meet the requirements of Licensee, or that the operation of the
#-- Materials will be uninterrupted or error-free, or that defects
#-- in the Materials will be corrected. Furthermore, Xilinx does
#-- not warrant or make any representations regarding use, or the
#-- results of the use, of the Materials in terms of correctness,
#-- accuracy, reliability or otherwise.
#--
#-- Xilinx products are not designed or intended to be fail-safe,
#-- or for use in any application requiring fail-safe performance,
#-- such as life-support or safety devices or systems, Class III
#-- medical devices, nuclear facilities, applications related to
#-- the deployment of airbags, or any other applications that could
#-- lead to death, personal injury or severe property or
#-- environmental damage (individually and collectively, "critical
#-- applications"). Customer assumes the sole risk and liability
#-- of any use of Xilinx products in critical applications,
#-- subject only to applicable laws and regulations governing
#-- limitations on product liability.
#--
#-- Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.
#--
#-- This disclaimer and copyright notice must be retained as part
#-- of this file at all times.
#--
###################################################################
##
## Name     : xps_spi
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN xps_spi

## Peripheral Options
OPTION STYLE = HDL
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = VHDL
OPTION USAGE_LEVEL = BASE_USER
OPTION IPLEVEL_DRC_PROC = check_iplevel_settings
OPTION DESC = XPS SPI Interface
OPTION LONG_DESC = PLBV46 to Motorola Serial Peripheral Interface (SPI) adapter
OPTION IP_GROUP = Communication Low-Speed:MICROBLAZE:PPC
OPTION ARCH_SUPPORT_MAP = (aspartan3=PRODUCTION, spartan3=PRODUCTION, spartan3an=PRODUCTION, spartan3a=PRODUCTION, spartan3e=PRODUCTION, spartan3adsp=PRODUCTION, virtex4lx=PRODUCTION, virtex4sx=PRODUCTION, virtex4fx=PRODUCTION, virtex5lx=PRODUCTION, virtex5sx=PRODUCTION, virtex5fx=PRODUCTION, aspartan3e=PRODUCTION, aspartan3a=PRODUCTION, aspartan3adsp=PRODUCTION, qvirtex4lx=PRODUCTION, qvirtex4sx=PRODUCTION, qvirtex4fx=PRODUCTION, qrvirtex4lx=PRODUCTION, qrvirtex4sx=PRODUCTION, qrvirtex4fx=PRODUCTION, spartan6t=PRODUCTION, spartan6=PRODUCTION, spartan6l=PRE_PRODUCTION, qspartan6t=PRODUCTION, qspartan6=PRODUCTION, aspartan6t=PRODUCTION, aspartan6=PRODUCTION, virtex6lx=PRODUCTION, virtex6sx=PRODUCTION, virtex6hx=PRODUCTION, virtex6cx=PRODUCTION, virtex6llx=PRODUCTION, virtex6lsx=PRODUCTION, qspartan6l=PRE_PRODUCTION, qrvirtex5=PRE_PRODUCTION, qvirtex6lx=PRODUCTION, qvirtex6sx=PRODUCTION, qvirtex6fx=PRODUCTION, qvirtex6tx=PRODUCTION)
OPTION RUN_NGCBUILD = FALSE

IO_INTERFACE IO_IF = spi_0, IO_TYPE = XIL_SPI_V1

## Bus Interfaces
BUS_INTERFACE BUS = SPLB, BUS_TYPE = SLAVE, BUS_STD = PLBV46

## Generics for VHDL or Parameters for Verilog
PARAMETER C_BASEADDR = 0xFFFFFFFF, DT = std_logic_vector, BUS = SPLB, ADDRESS = BASE, PAIR = C_HIGHADDR, MIN_SIZE = 0x80, ASSIGNMENT = REQUIRE
PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector, BUS = SPLB, ADDRESS = HIGH, PAIR = C_BASEADDR, ASSIGNMENT = REQUIRE
PARAMETER C_FAMILY = virtex5, DT = STRING
PARAMETER C_SPLB_AWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_DWIDTH = 32, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_P2P = 0, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_MID_WIDTH = 1, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_NUM_MASTERS = 1, DT = INTEGER, BUS = SPLB
PARAMETER C_SPLB_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_FIFO_EXIST = 1, DT = INTEGER, RANGE = (0:1), PERMIT = BASE_USER, DESC = Include Receive and Transmit FIFOs, VALUES = (0= FALSE , 1= TRUE)
PARAMETER C_SCK_RATIO = 32, DT = INTEGER, RANGE = (2,4,16,32,48,64,80,96,112,128,144,160,176,192,208,224,240,256,272,288,304,320,336,352,368,384,400,416,432,448,464,480,496,512,528,544,560,576,592,608,624,640,656,672,688,704,720,736,752,768,784,800,816,832,848,864,880,896,912,928,944,960,976,992,1008,1024,1040,1056,1072,1088,1104,1120,1136,1152,1168,1184,1200,1216,1232,1248,1264,1280,1296,1312,1328,1344,1360,1376,1392,1408,1424,1440,1456,1472,1488,1504,1520,1536,1552,1568,1584,1600,1616,1632,1648,1664,1680,1696,1712,1728,1744,1760,1776,1792,1808,1824,1840,1856,1872,1888,1904,1920,1936,1952,1968,1984,2000,2016,2032,2048), PERMIT = BASE_USER, IO_IF = spi_0, IO_IS = clk_freq
PARAMETER C_NUM_SS_BITS = 1, DT = INTEGER, RANGE = (1:32), PERMIT = BASE_USER, IO_IF = spi_0, IO_IS = ss_bits
PARAMETER C_NUM_TRANSFER_BITS = 8, DT = INTEGER, RANGE = (8,16,32), PERMIT = BASE_USER, IO_IF = spi_0, IO_IS = ss_bits

## Ports
PORT SCK_I = "", DIR = I, IO_IF = spi_0, IO_IS = clk_out_I
PORT SCK_O = "", DIR = O, IO_IF = spi_0, IO_IS = clk_out_O
PORT SCK_T = "", DIR = O, IO_IF = spi_0, IO_IS = clk_out_T
PORT MISO_I = "", DIR = I, IO_IF = spi_0, IO_IS = data_out_I
PORT MISO_O = "", DIR = O, IO_IF = spi_0, IO_IS = data_out_O
PORT MISO_T = "", DIR = O, IO_IF = spi_0, IO_IS = data_out_T
PORT MOSI_I = "", DIR = I, IO_IF = spi_0, IO_IS = data_in_I
PORT MOSI_O = "", DIR = O, IO_IF = spi_0, IO_IS = data_in_O
PORT MOSI_T = "", DIR = O, IO_IF = spi_0, IO_IS = data_in_T
PORT SPISEL = "", DIR = I, INITIALVAL = VCC, PERMIT = BASE_USER, DESC = 'Local SPI Slave Select Active LOW Input', IO_IF = spi_0, IO_IS = slave_select_n
PORT SS_I = "", DIR = I, VEC = [0:(C_NUM_SS_BITS-1)], IO_IF = spi_0, IO_IS = chip_select_I
PORT SS_O = "", DIR = O, VEC = [0:(C_NUM_SS_BITS-1)], IO_IF = spi_0, IO_IS = chip_select_O
PORT SS_T = "", DIR = O, IO_IF = spi_0, IO_IS = chip_select_T
PORT SPLB_Clk = "", DIR = I, SIGIS = CLK, BUS = SPLB
PORT SPLB_Rst = SPLB_Rst, DIR = I, SIGIS = RST, BUS = SPLB
PORT PLB_ABus = PLB_ABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB
PORT PLB_masterID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB_MID_WIDTH-1)], BUS = SPLB
PORT PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB
PORT PLB_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB_DWIDTH/8)-1)], BUS = SPLB
PORT PLB_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB
PORT PLB_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB
PORT PLB_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB
PORT Sl_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB
PORT Sl_wait = Sl_wait, DIR = O, BUS = SPLB
PORT Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB
PORT Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB
PORT Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB
PORT Sl_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB
PORT Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB
PORT Sl_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT PLB_UABus = PLB_UABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB
PORT PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB
PORT PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB
PORT PLB_abort = PLB_abort, DIR = I, BUS = SPLB
PORT PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB
PORT PLB_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB
PORT PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB
PORT PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB
PORT PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB
PORT PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB
PORT PLB_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB
PORT Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB
PORT Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB
PORT Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB
PORT Sl_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT IP2INTC_Irpt = "", DIR = O, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH, INTERRUPT_PRIORITY = LOW
PORT SCK = "", DIR = IO, THREE_STATE = TRUE, TRI_I = SCK_I, TRI_O = SCK_O, TRI_T = SCK_T, IO_IF = spi_0, IO_IS = clk_out, PERMIT = BASE_USER, DESC = 'SPI Bus Clock'
PORT MISO = "", DIR = IO, THREE_STATE = TRUE, TRI_I = MISO_I, TRI_O = MISO_O, TRI_T = MISO_T, IO_IF = spi_0, IO_IS = data_out, PERMIT = BASE_USER, DESC = 'Master In Slave Out'
PORT MOSI = "", DIR = IO, THREE_STATE = TRUE, TRI_I = MOSI_I, TRI_O = MOSI_O, TRI_T = MOSI_T, IO_IF = spi_0, IO_IS = data_in, PERMIT = BASE_USER, DESC = 'Master Out Slave In'
PORT SS = "", DIR = IO, VEC = [0:(C_NUM_SS_BITS-1)], THREE_STATE = TRUE, TRI_I = SS_I, TRI_O = SS_O, TRI_T = SS_T, IO_IF = spi_0, IO_IS = chip_select, PERMIT = BASE_USER, DESC = 'Slave Select Vector'

END
